{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        backgroundColor: 'red',\n        position: 'topRight',\n        titleColor: 'white',\n        messageColor: 'white',\n      });\n    } else {\n      btnStart.removeAttribute('disabled');\n    }\n  },\n};\n\nconst input = document.querySelector(\"input[type = 'text']\");\nconst btnStart = document.querySelector('.btn-start');\nconst spanDays = document.querySelector('span[data-days]');\nconst spanHours = document.querySelector('span[data-hours]');\nconst spanMinutes = document.querySelector('span[data-minutes]');\nconst spanSeconds = document.querySelector('span[data-seconds]');\n\nflatpickr(input, options);\n\nbtnStart.addEventListener('click', handleStart);\n\nfunction handleStart(event) {\n  btnStart.disabled = 'true';\n  input.disabled = 'true';\n  const startTime = Date.now();\n  const idInterval = setInterval(() => {\n    const currentTime = Date.now();\n    const totalTime = currentTime - startTime;\n    const resTime = convertMs(totalTime);\n\n    updateClockface();\n  }, 1000);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateClockface({ days, hours, minutes, seconds }) {\n  spanDays.textContent = days;\n  spanHours.textContent = hours;\n  spanMinutes.textContent = minutes;\n  spanSeconds.textContent = seconds;\n}\n"],"names":["userSelectedDate","options","selectedDates","iziToast","btnStart","input","spanDays","spanHours","spanMinutes","spanSeconds","flatpickr","handleStart","event","updateClockface","days","hours","minutes","seconds"],"mappings":"0IAmBA,IAAIA,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmB,IAAI,KACzBG,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,gBAAiB,MACjB,SAAU,WACV,WAAY,QACZ,aAAc,OACtB,CAAO,EAEDC,EAAS,gBAAgB,UAAU,CAEtC,CACH,EAEMC,EAAQ,SAAS,cAAc,sBAAsB,EACrDD,EAAW,SAAS,cAAc,YAAY,EAC9CE,EAAW,SAAS,cAAc,iBAAiB,EACnDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EAE/DC,EAAUL,EAAOJ,CAAO,EAExBG,EAAS,iBAAiB,QAASO,CAAW,EAE9C,SAASA,EAAYC,EAAO,CAC1BR,EAAS,SAAW,OACpBC,EAAM,SAAW,OAEE,YAAY,IAAM,CAKnCQ,GACD,EAAE,GAAI,CACT,CAMA,SAASA,EAAgB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DX,EAAS,YAAcQ,EACvBP,EAAU,YAAcQ,EACxBP,EAAY,YAAcQ,EAC1BP,EAAY,YAAcQ,CAC5B"}